{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanmichaeli/Desktop/ReactApp/src/components/Analytics/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './Analytics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// Mock data - replace with actual API calls in a real application\nconst mockOrderData = [{\n  day: 'Monday',\n  averageOrders: 45\n}, {\n  day: 'Tuesday',\n  averageOrders: 52\n}, {\n  day: 'Wednesday',\n  averageOrders: 49\n}, {\n  day: 'Thursday',\n  averageOrders: 58\n}, {\n  day: 'Friday',\n  averageOrders: 65\n}, {\n  day: 'Saturday',\n  averageOrders: 72\n}, {\n  day: 'Sunday',\n  averageOrders: 40\n}];\nconst Analytics = () => {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [todayOrders, setTodayOrders] = useState(0);\n  const isRTL = i18n.language === 'he';\n  useEffect(() => {\n    // Simulating API call to fetch data\n    setTimeout(() => {\n      setWeeklyData(mockOrderData.map(data => ({\n        ...data,\n        day: t(data.day.toLowerCase())\n      })));\n      setTodayOrders(Math.floor(Math.random() * 100)); // Random number for demo\n    }, 1000);\n  }, [t]);\n  const chartData = {\n    labels: weeklyData.map(data => data.day),\n    datasets: [{\n      label: t('average_orders'),\n      data: weeklyData.map(data => data.averageOrders),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: t('average_orders_by_day')\n      }\n    },\n    scales: {\n      x: {\n        reverse: isRTL\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `analytics-container ${isRTL ? 'rtl' : 'ltr'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t('analytics_dashboard')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-orders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: t('todays_orders')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-count\",\n        children: todayOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-chart\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"PXTWFP4Ms011bxAiH5Tqplc1SQQ=\", false, function () {\n  return [useTranslation];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","mockOrderData","day","averageOrders","Analytics","_s","t","i18n","weeklyData","setWeeklyData","todayOrders","setTodayOrders","isRTL","language","setTimeout","map","data","toLowerCase","Math","floor","random","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","scales","x","reverse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathanmichaeli/Desktop/ReactApp/src/components/Analytics/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport './Analytics.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Mock data - replace with actual API calls in a real application\nconst mockOrderData = [\n  { day: 'Monday', averageOrders: 45 },\n  { day: 'Tuesday', averageOrders: 52 },\n  { day: 'Wednesday', averageOrders: 49 },\n  { day: 'Thursday', averageOrders: 58 },\n  { day: 'Friday', averageOrders: 65 },\n  { day: 'Saturday', averageOrders: 72 },\n  { day: 'Sunday', averageOrders: 40 },\n];\n\nconst Analytics = () => {\n  const { t, i18n } = useTranslation();\n  const [weeklyData, setWeeklyData] = useState([]);\n  const [todayOrders, setTodayOrders] = useState(0);\n\n  const isRTL = i18n.language === 'he';\n\n  useEffect(() => {\n    // Simulating API call to fetch data\n    setTimeout(() => {\n      setWeeklyData(mockOrderData.map(data => ({\n        ...data,\n        day: t(data.day.toLowerCase())\n      })));\n      setTodayOrders(Math.floor(Math.random() * 100)); // Random number for demo\n    }, 1000);\n  }, [t]);\n\n  const chartData = {\n    labels: weeklyData.map(data => data.day),\n    datasets: [\n      {\n        label: t('average_orders'),\n        data: weeklyData.map(data => data.averageOrders),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: t('average_orders_by_day'),\n      },\n    },\n    scales: {\n      x: {\n        reverse: isRTL,\n      },\n    },\n  };\n\n  return (\n    <div className={`analytics-container ${isRTL ? 'rtl' : 'ltr'}`}>\n      <h1>{t('analytics_dashboard')}</h1>\n      \n      <div className=\"today-orders\">\n        <h2>{t('todays_orders')}</h2>\n        <div className=\"order-count\">{todayOrders}</div>\n      </div>\n\n      <div className=\"weekly-chart\">\n        <Bar data={chartData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default Analytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}